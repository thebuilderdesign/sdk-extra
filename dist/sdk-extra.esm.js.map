{"version":3,"file":"sdk-extra.esm.js","sources":["../src/blockchain.ts","../src/tokens.ts"],"sourcesContent":["import { ChainId, Currency, ETHER, NOVA, BINANCE_COIN } from '@venomswap/sdk'\r\nimport random from 'lodash.random'\r\n\r\n/**\r\n * Blockchain is an enum representing different blockchains\r\n */\r\nexport enum Blockchain {\r\n  ETHEREUM = 1,\r\n  BINANCE_SMART_CHAIN = 2,\r\n  NOVA = 3\r\n}\r\n\r\n/**\r\n * BlockchainSettings represents settings for a specific blockchain\r\n */\r\nexport class BlockchainSettings {\r\n  chainId: number\r\n  blockchain?: Blockchain\r\n  name?: string\r\n  rpcURLs?: string[]\r\n  rpcAPIKey?: string\r\n  explorerURL?: string\r\n  blockTime?: number\r\n  currency?: Currency\r\n  \r\n  constructor(chainId: ChainId, blockchain?: Blockchain, name?: string, rpcURLs?: string[], rpcAPIKey?: string, explorerURL?: string, blockTime?: number) {\r\n    this.chainId = chainId\r\n    this.rpcAPIKey = rpcAPIKey\r\n\r\n    this.setBlockchain(blockchain)\r\n    this.setName(name)\r\n    this.setRpcURLs(rpcURLs)\r\n    this.setExplorerURL(explorerURL)\r\n    this.setCurrency()\r\n    this.setBlocktime(blockTime)\r\n  }\r\n\r\n  setBlockchain(blockchain?: Blockchain) {\r\n    if (blockchain) {\r\n      this.blockchain = blockchain\r\n    } else {\r\n      switch (this.chainId) {\r\n        case 56:\r\n        case 97:\r\n          this.blockchain = Blockchain.BINANCE_SMART_CHAIN\r\n        break\r\n        case 42170:\r\n        case 1666700000:\r\n          this.blockchain = Blockchain.NOVA\r\n        break\r\n        default:\r\n          this.blockchain = Blockchain.ETHEREUM\r\n      }\r\n    }\r\n  }\r\n\r\n  setName(name?: string) {\r\n    if (name) {\r\n      this.name = name\r\n    } else {\r\n      switch (this.chainId) {\r\n        case 1:\r\n          this.name = 'Ethereum Mainnet'\r\n          break\r\n        case 3:\r\n          this.name = 'Ethereum Ropsten'\r\n          break\r\n        case 4:\r\n          this.name = 'Ethereum Rinkeby'\r\n          break\r\n        case 5:\r\n          this.name = 'Ethereum Görli'\r\n          break\r\n        case 42:\r\n          this.name = 'Ethereum Kovan'\r\n          break\r\n        case 56:\r\n          this.name = 'Binance Smart Chain Mainnet'\r\n          break\r\n        case 97:\r\n          this.name = 'Binance Smart Chain Testnet'\r\n          break\r\n        case 42170:\r\n          this.name = 'Arbitrum Nova'\r\n          break\r\n        case 1666700000:\r\n          this.name = 'Harmony Testnet'\r\n          break\r\n        default:\r\n          this.name = 'Ethereum Mainnet'\r\n      }\r\n    }\r\n  }\r\n\r\n  setRpcURLs(rpcURLs?: string[]){\r\n    if (rpcURLs && rpcURLs.length > 0) {\r\n      this.rpcURLs = rpcURLs\r\n    } else {\r\n      switch (this.chainId) {\r\n        case 1:\r\n          this.rpcURLs = this.rpcAPIKey && this.rpcAPIKey !== '' ?  [`https://mainnet.infura.io/v3/${this.rpcAPIKey}`] : ['https://mainnet.infura.io/v3/']\r\n          break\r\n        case 3:\r\n          this.rpcURLs = this.rpcAPIKey && this.rpcAPIKey !== '' ?  [`https://ropsten.infura.io/v3/${this.rpcAPIKey}`] : ['https://ropsten.infura.io/v3/']\r\n          break\r\n        case 4:\r\n          this.rpcURLs = this.rpcAPIKey && this.rpcAPIKey !== '' ?  [`https://rinkeby.infura.io/v3/${this.rpcAPIKey}`] : ['https://rinkeby.infura.io/v3/']\r\n          break\r\n        case 5:\r\n          this.rpcURLs = this.rpcAPIKey && this.rpcAPIKey !== '' ?  [`https://goerli.infura.io/v3/${this.rpcAPIKey}`] : ['https://goerli.infura.io/v3/']\r\n          break\r\n        case 42:\r\n          this.rpcURLs = this.rpcAPIKey && this.rpcAPIKey !== '' ?  [`https://kovan.infura.io/v3/${this.rpcAPIKey}`] : ['https://kovan.infura.io/v3/']\r\n          break\r\n        case 56:\r\n          this.rpcURLs = [\r\n            'https://bsc-dataseed.binance.org/',\r\n            'https://bsc-dataseed1.defibit.io/',\r\n            'https://bsc-dataseed1.ninicoin.io/'\r\n          ]\r\n          break\r\n        case 97:\r\n          this.rpcURLs = [\r\n            'https://data-seed-prebsc-1-s1.binance.org:8545/',\r\n            'https://data-seed-prebsc-2-s1.binance.org:8545/',\r\n            'https://data-seed-prebsc-1-s2.binance.org:8545/'\r\n          ]\r\n          break\r\n        case 42170:\r\n          this.rpcURLs = ['https://nova.arbitrum.io/rpc']\r\n          break\r\n        case 1666700000:\r\n          this.rpcURLs = ['https://api.s0.b.hmny.io/']\r\n          break\r\n        default:\r\n          this.rpcURLs = this.rpcAPIKey && this.rpcAPIKey !== '' ? [`https://mainnet.infura.io/v3/${this.rpcAPIKey}`] : ['https://mainnet.infura.io/v3/']\r\n      }\r\n    }\r\n  }\r\n\r\n  setExplorerURL(explorerURL?: string){\r\n    if (explorerURL && explorerURL !== '') {\r\n      this.explorerURL = explorerURL\r\n    } else {\r\n      switch (this.chainId) {\r\n        case 1:\r\n          this.explorerURL = 'https://etherscan.io/'\r\n          break\r\n        case 3:\r\n          this.explorerURL = 'https://ropsten.etherscan.io/'\r\n          break\r\n        case 4:\r\n          this.explorerURL = 'https://rinkeby.etherscan.io/'\r\n          break\r\n        case 5:\r\n          this.explorerURL = 'https://goerli.etherscan.io/'\r\n          break\r\n        case 42:\r\n          this.explorerURL = 'https://kovan.etherscan.io/'\r\n          break\r\n        case 56:\r\n          this.explorerURL = 'https://bscscan.com/'\r\n          break\r\n        case 97:\r\n          this.explorerURL = 'https://testnet.bscscan.com/'\r\n          break\r\n        case 42170:\r\n          this.explorerURL = 'https://nova-explorer.arbitrum.io'\r\n          break\r\n        case 1666700000:\r\n          this.explorerURL = 'https://explorer.testnet.harmony.one/'\r\n          break\r\n        default:\r\n          this.explorerURL = 'https://etherscan.io/'\r\n      }\r\n    }\r\n  }\r\n\r\n  setCurrency() {\r\n    switch (this.chainId) {\r\n      case 56:\r\n      case 97:\r\n        this.currency = BINANCE_COIN\r\n        break\r\n      case 42170:\r\n      case 1666700000:\r\n        this.currency = NOVA\r\n        break\r\n      default:\r\n        this.currency = ETHER\r\n    }\r\n  }\r\n\r\n  setBlocktime(blockTime?: number) {\r\n    if (blockTime) {\r\n      this.blockTime = blockTime\r\n    } else {\r\n      switch (this.chainId) {\r\n        case 56:\r\n        case 97:\r\n          this.blockTime = 3\r\n          break\r\n        case 42170:\r\n        case 1666700000:\r\n          this.blockTime = 2\r\n          break\r\n        default:\r\n          this.blockTime = 13\r\n      }\r\n    }\r\n  }\r\n\r\n  randomRpcURL(): string | undefined {\r\n    if (this.rpcURLs === undefined || this.rpcURLs.length === 0) return undefined\r\n    const randomIndex = random(0, this.rpcURLs.length - 1)\r\n    return this.rpcURLs[randomIndex]\r\n  }\r\n\r\n  hexChainId(): string {\r\n    return `0x${this.chainId?.toString(16)}`\r\n  }\r\n}\r\n\r\nexport const BLOCKCHAIN_SETTINGS: { [chainId in ChainId]: BlockchainSettings } = {\r\n  [ChainId.MAINNET]: new BlockchainSettings(ChainId.MAINNET),\r\n  [ChainId.ROPSTEN]: new BlockchainSettings(ChainId.ROPSTEN),\r\n  [ChainId.RINKEBY]: new BlockchainSettings(ChainId.RINKEBY),\r\n  [ChainId.GÖRLI]: new BlockchainSettings(ChainId.GÖRLI),\r\n  [ChainId.KOVAN]: new BlockchainSettings(ChainId.KOVAN),\r\n  [ChainId.BSC_MAINNET]: new BlockchainSettings(ChainId.BSC_MAINNET),\r\n  [ChainId.BSC_TESTNET]: new BlockchainSettings(ChainId.BSC_TESTNET),\r\n  [ChainId.ARBITRUM_NOVA]: new BlockchainSettings(ChainId.ARBITRUM_NOVA),\r\n  [ChainId.HARMONY_TESTNET]: new BlockchainSettings(ChainId.HARMONY_TESTNET),\r\n}\r\n","import DEFAULT_TOKEN_LIST from '@venomswap/default-token-list'\r\nimport COMMUNITY_TOKEN_LIST from '@venomswap/community-token-list'\r\nimport { ChainId, Token } from '@venomswap/sdk'\r\n\r\nexport interface TokenListToken {\r\n  chainId: number\r\n  address: string\r\n  name: string\r\n  symbol: string\r\n  decimals: number\r\n  logoURI: string\r\n}\r\n\r\nexport class Tokens {\r\n  chainId?: ChainId\r\n  rawTokens: TokenListToken[]\r\n  tokens?: Token[]\r\n  \r\n  constructor(chainId?: ChainId, tokens = [...DEFAULT_TOKEN_LIST.tokens, ...COMMUNITY_TOKEN_LIST.tokens]) {\r\n    this.chainId = chainId\r\n    this.rawTokens = tokens\r\n    this.setTokens()\r\n  }\r\n\r\n  private setTokens() {\r\n    this.tokens = this.convertTokens(this.rawTokens)\r\n\r\n    if (this.chainId) {\r\n      this.tokens = this.byChainId()\r\n    }\r\n  }\r\n\r\n  public all(): Token[] | undefined {\r\n    if (!this.tokens || this.tokens.length == 0) return undefined\r\n    return this.tokens\r\n  }\r\n\r\n  public byChainId(): Token[] | undefined {\r\n    if (this.chainId === undefined || this.tokens === undefined) return undefined\r\n    return this.tokens.filter((token: Token) => token.chainId == this.chainId)\r\n  }\r\n\r\n  public byName(name: string): Token[] | undefined {\r\n    return this.find('name', name)\r\n  }\r\n\r\n  public bySymbol(symbol: string): Token[] | undefined {\r\n    return this.find('symbol', symbol)\r\n  }\r\n\r\n  public byAddress(address: string): Token[] | undefined {\r\n    return this.find('address', address)\r\n  }\r\n\r\n  public firstByName(name: string): Token | undefined {\r\n    return this.find('name', name)?.[0]\r\n  }\r\n\r\n  public firstBySymbol(symbol: string): Token | undefined {\r\n    return this.find('symbol', symbol)?.[0]\r\n  }\r\n\r\n  public firstByAddress(address: string): Token | undefined {\r\n    return this.find('address', address)?.[0]\r\n  }\r\n\r\n  public find(key: string, value: string): Token[] | undefined {\r\n    if (this.tokens === undefined) return undefined\r\n  \r\n    switch (key) {\r\n      case 'name':\r\n        return this.tokens.filter((token) => token?.name?.toLowerCase() == value.toLowerCase())\r\n      case 'symbol':\r\n        return this.tokens.filter((token) => token?.symbol?.toLowerCase() == value.toLowerCase())\r\n      case 'address':\r\n        return this.tokens.filter((token) => token?.address?.toLowerCase() == value.toLowerCase())\r\n      default:\r\n        return this.tokens.filter((token) => token?.name?.toLowerCase() == value.toLowerCase())\r\n    }\r\n  }\r\n\r\n  public first(key: string, value: string): Token | undefined {\r\n    return this.find(key, value)?.[0]\r\n  }\r\n  \r\n  public convertTokens(tokens: TokenListToken[]): Token[] {\r\n    const sdkTokens: Token[] = []\r\n  \r\n    for (const token of tokens) {\r\n      const sdkToken = this.convertToken(token)\r\n      sdkTokens.push(sdkToken)\r\n    }\r\n  \r\n    return sdkTokens\r\n  }\r\n  \r\n  public convertToken(token: TokenListToken): Token {\r\n    return new Token(token.chainId, token.address, token.decimals, token.symbol, token.name)\r\n  }\r\n}\r\n\r\nexport const TOKENS: { [chainId in ChainId]: Tokens } = {\r\n  [ChainId.MAINNET]: new Tokens(ChainId.MAINNET),\r\n  [ChainId.ROPSTEN]: new Tokens(ChainId.ROPSTEN),\r\n  [ChainId.RINKEBY]: new Tokens(ChainId.RINKEBY),\r\n  [ChainId.GÖRLI]: new Tokens(ChainId.GÖRLI),\r\n  [ChainId.KOVAN]: new Tokens(ChainId.KOVAN),\r\n  [ChainId.BSC_MAINNET]: new Tokens(ChainId.BSC_MAINNET),\r\n  [ChainId.BSC_TESTNET]: new Tokens(ChainId.BSC_TESTNET),\r\n  [ChainId.ARBITRUM_NOVA]: new Tokens(ChainId.ARBITRUM_NOVA),\r\n  [ChainId.HARMONY_TESTNET]: new Tokens(ChainId.HARMONY_TESTNET),\r\n}\r\n"],"names":["Blockchain","BlockchainSettings","chainId","blockchain","name","rpcURLs","rpcAPIKey","explorerURL","blockTime","setBlockchain","setName","setRpcURLs","setExplorerURL","setCurrency","setBlocktime","BINANCE_SMART_CHAIN","NOVA","ETHEREUM","length","currency","BINANCE_COIN","ETHER","randomRpcURL","undefined","randomIndex","random","hexChainId","toString","BLOCKCHAIN_SETTINGS","ChainId","MAINNET","ROPSTEN","RINKEBY","GÖRLI","KOVAN","BSC_MAINNET","BSC_TESTNET","ARBITRUM_NOVA","HARMONY_TESTNET","Tokens","tokens","DEFAULT_TOKEN_LIST","COMMUNITY_TOKEN_LIST","rawTokens","setTokens","convertTokens","byChainId","all","filter","token","byName","find","bySymbol","symbol","byAddress","address","firstByName","firstBySymbol","firstByAddress","key","value","toLowerCase","first","sdkTokens","sdkToken","convertToken","push","Token","decimals","TOKENS"],"mappings":"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"}