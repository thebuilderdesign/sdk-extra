{"version":3,"file":"sdk-extra.cjs.production.min.js","sources":["../src/blockchain.ts","../src/tokens.ts"],"sourcesContent":["import { ChainId, Currency, ETHER, NOVA, BINANCE_COIN } from '@venomswap/sdk'\r\nimport random from 'lodash.random'\r\n\r\n/**\r\n * Blockchain is an enum representing different blockchains\r\n */\r\nexport enum Blockchain {\r\n  ETHEREUM = 1,\r\n  BINANCE_SMART_CHAIN = 2,\r\n  NOVA = 3\r\n}\r\n\r\n/**\r\n * BlockchainSettings represents settings for a specific blockchain\r\n */\r\nexport class BlockchainSettings {\r\n  chainId: number\r\n  blockchain?: Blockchain\r\n  name?: string\r\n  rpcURLs?: string[]\r\n  rpcAPIKey?: string\r\n  explorerURL?: string\r\n  blockTime?: number\r\n  currency?: Currency\r\n  \r\n  constructor(chainId: ChainId, blockchain?: Blockchain, name?: string, rpcURLs?: string[], rpcAPIKey?: string, explorerURL?: string, blockTime?: number) {\r\n    this.chainId = chainId\r\n    this.rpcAPIKey = rpcAPIKey\r\n\r\n    this.setBlockchain(blockchain)\r\n    this.setName(name)\r\n    this.setRpcURLs(rpcURLs)\r\n    this.setExplorerURL(explorerURL)\r\n    this.setCurrency()\r\n    this.setBlocktime(blockTime)\r\n  }\r\n\r\n  setBlockchain(blockchain?: Blockchain) {\r\n    if (blockchain) {\r\n      this.blockchain = blockchain\r\n    } else {\r\n      switch (this.chainId) {\r\n        case 56:\r\n        case 97:\r\n          this.blockchain = Blockchain.BINANCE_SMART_CHAIN\r\n        break\r\n        case 42170:\r\n        case 1666700000:\r\n          this.blockchain = Blockchain.NOVA\r\n        break\r\n        default:\r\n          this.blockchain = Blockchain.ETHEREUM\r\n      }\r\n    }\r\n  }\r\n\r\n  setName(name?: string) {\r\n    if (name) {\r\n      this.name = name\r\n    } else {\r\n      switch (this.chainId) {\r\n        case 1:\r\n          this.name = 'Ethereum Mainnet'\r\n          break\r\n        case 3:\r\n          this.name = 'Ethereum Ropsten'\r\n          break\r\n        case 4:\r\n          this.name = 'Ethereum Rinkeby'\r\n          break\r\n        case 5:\r\n          this.name = 'Ethereum Görli'\r\n          break\r\n        case 42:\r\n          this.name = 'Ethereum Kovan'\r\n          break\r\n        case 56:\r\n          this.name = 'Binance Smart Chain Mainnet'\r\n          break\r\n        case 97:\r\n          this.name = 'Binance Smart Chain Testnet'\r\n          break\r\n        case 42170:\r\n          this.name = 'Arbitrum Nova'\r\n          break\r\n        case 1666700000:\r\n          this.name = 'Harmony Testnet'\r\n          break\r\n        default:\r\n          this.name = 'Ethereum Mainnet'\r\n      }\r\n    }\r\n  }\r\n\r\n  setRpcURLs(rpcURLs?: string[]){\r\n    if (rpcURLs && rpcURLs.length > 0) {\r\n      this.rpcURLs = rpcURLs\r\n    } else {\r\n      switch (this.chainId) {\r\n        case 1:\r\n          this.rpcURLs = this.rpcAPIKey && this.rpcAPIKey !== '' ?  [`https://mainnet.infura.io/v3/${this.rpcAPIKey}`] : ['https://mainnet.infura.io/v3/']\r\n          break\r\n        case 3:\r\n          this.rpcURLs = this.rpcAPIKey && this.rpcAPIKey !== '' ?  [`https://ropsten.infura.io/v3/${this.rpcAPIKey}`] : ['https://ropsten.infura.io/v3/']\r\n          break\r\n        case 4:\r\n          this.rpcURLs = this.rpcAPIKey && this.rpcAPIKey !== '' ?  [`https://rinkeby.infura.io/v3/${this.rpcAPIKey}`] : ['https://rinkeby.infura.io/v3/']\r\n          break\r\n        case 5:\r\n          this.rpcURLs = this.rpcAPIKey && this.rpcAPIKey !== '' ?  [`https://goerli.infura.io/v3/${this.rpcAPIKey}`] : ['https://goerli.infura.io/v3/']\r\n          break\r\n        case 42:\r\n          this.rpcURLs = this.rpcAPIKey && this.rpcAPIKey !== '' ?  [`https://kovan.infura.io/v3/${this.rpcAPIKey}`] : ['https://kovan.infura.io/v3/']\r\n          break\r\n        case 56:\r\n          this.rpcURLs = [\r\n            'https://bsc-dataseed.binance.org/',\r\n            'https://bsc-dataseed1.defibit.io/',\r\n            'https://bsc-dataseed1.ninicoin.io/'\r\n          ]\r\n          break\r\n        case 97:\r\n          this.rpcURLs = [\r\n            'https://data-seed-prebsc-1-s1.binance.org:8545/',\r\n            'https://data-seed-prebsc-2-s1.binance.org:8545/',\r\n            'https://data-seed-prebsc-1-s2.binance.org:8545/'\r\n          ]\r\n          break\r\n        case 42170:\r\n          this.rpcURLs = ['https://nova.arbitrum.io/rpc']\r\n          break\r\n        case 1666700000:\r\n          this.rpcURLs = ['https://api.s0.b.hmny.io/']\r\n          break\r\n        default:\r\n          this.rpcURLs = this.rpcAPIKey && this.rpcAPIKey !== '' ? [`https://mainnet.infura.io/v3/${this.rpcAPIKey}`] : ['https://mainnet.infura.io/v3/']\r\n      }\r\n    }\r\n  }\r\n\r\n  setExplorerURL(explorerURL?: string){\r\n    if (explorerURL && explorerURL !== '') {\r\n      this.explorerURL = explorerURL\r\n    } else {\r\n      switch (this.chainId) {\r\n        case 1:\r\n          this.explorerURL = 'https://etherscan.io/'\r\n          break\r\n        case 3:\r\n          this.explorerURL = 'https://ropsten.etherscan.io/'\r\n          break\r\n        case 4:\r\n          this.explorerURL = 'https://rinkeby.etherscan.io/'\r\n          break\r\n        case 5:\r\n          this.explorerURL = 'https://goerli.etherscan.io/'\r\n          break\r\n        case 42:\r\n          this.explorerURL = 'https://kovan.etherscan.io/'\r\n          break\r\n        case 56:\r\n          this.explorerURL = 'https://bscscan.com/'\r\n          break\r\n        case 97:\r\n          this.explorerURL = 'https://testnet.bscscan.com/'\r\n          break\r\n        case 42170:\r\n          this.explorerURL = 'https://nova-explorer.arbitrum.io'\r\n          break\r\n        case 1666700000:\r\n          this.explorerURL = 'https://explorer.testnet.harmony.one/'\r\n          break\r\n        default:\r\n          this.explorerURL = 'https://etherscan.io/'\r\n      }\r\n    }\r\n  }\r\n\r\n  setCurrency() {\r\n    switch (this.chainId) {\r\n      case 56:\r\n      case 97:\r\n        this.currency = BINANCE_COIN\r\n        break\r\n      case 42170:\r\n      case 1666700000:\r\n        this.currency = NOVA\r\n        break\r\n      default:\r\n        this.currency = ETHER\r\n    }\r\n  }\r\n\r\n  setBlocktime(blockTime?: number) {\r\n    if (blockTime) {\r\n      this.blockTime = blockTime\r\n    } else {\r\n      switch (this.chainId) {\r\n        case 56:\r\n        case 97:\r\n          this.blockTime = 3\r\n          break\r\n        case 42170:\r\n        case 1666700000:\r\n          this.blockTime = 2\r\n          break\r\n        default:\r\n          this.blockTime = 13\r\n      }\r\n    }\r\n  }\r\n\r\n  randomRpcURL(): string | undefined {\r\n    if (this.rpcURLs === undefined || this.rpcURLs.length === 0) return undefined\r\n    const randomIndex = random(0, this.rpcURLs.length - 1)\r\n    return this.rpcURLs[randomIndex]\r\n  }\r\n\r\n  hexChainId(): string {\r\n    return `0x${this.chainId?.toString(16)}`\r\n  }\r\n}\r\n\r\nexport const BLOCKCHAIN_SETTINGS: { [chainId in ChainId]: BlockchainSettings } = {\r\n  [ChainId.MAINNET]: new BlockchainSettings(ChainId.MAINNET),\r\n  [ChainId.ROPSTEN]: new BlockchainSettings(ChainId.ROPSTEN),\r\n  [ChainId.RINKEBY]: new BlockchainSettings(ChainId.RINKEBY),\r\n  [ChainId.GÖRLI]: new BlockchainSettings(ChainId.GÖRLI),\r\n  [ChainId.KOVAN]: new BlockchainSettings(ChainId.KOVAN),\r\n  [ChainId.BSC_MAINNET]: new BlockchainSettings(ChainId.BSC_MAINNET),\r\n  [ChainId.BSC_TESTNET]: new BlockchainSettings(ChainId.BSC_TESTNET),\r\n  [ChainId.ARBITRUM_NOVA]: new BlockchainSettings(ChainId.ARBITRUM_NOVA),\r\n  [ChainId.HARMONY_TESTNET]: new BlockchainSettings(ChainId.HARMONY_TESTNET),\r\n}\r\n","import DEFAULT_TOKEN_LIST from '@venomswap/default-token-list'\r\nimport COMMUNITY_TOKEN_LIST from '@venomswap/community-token-list'\r\nimport { ChainId, Token } from '@venomswap/sdk'\r\n\r\nexport interface TokenListToken {\r\n  chainId: number\r\n  address: string\r\n  name: string\r\n  symbol: string\r\n  decimals: number\r\n  logoURI: string\r\n}\r\n\r\nexport class Tokens {\r\n  chainId?: ChainId\r\n  rawTokens: TokenListToken[]\r\n  tokens?: Token[]\r\n  \r\n  constructor(chainId?: ChainId, tokens = [...DEFAULT_TOKEN_LIST.tokens, ...COMMUNITY_TOKEN_LIST.tokens]) {\r\n    this.chainId = chainId\r\n    this.rawTokens = tokens\r\n    this.setTokens()\r\n  }\r\n\r\n  private setTokens() {\r\n    this.tokens = this.convertTokens(this.rawTokens)\r\n\r\n    if (this.chainId) {\r\n      this.tokens = this.byChainId()\r\n    }\r\n  }\r\n\r\n  public all(): Token[] | undefined {\r\n    if (!this.tokens || this.tokens.length == 0) return undefined\r\n    return this.tokens\r\n  }\r\n\r\n  public byChainId(): Token[] | undefined {\r\n    if (this.chainId === undefined || this.tokens === undefined) return undefined\r\n    return this.tokens.filter((token: Token) => token.chainId == this.chainId)\r\n  }\r\n\r\n  public byName(name: string): Token[] | undefined {\r\n    return this.find('name', name)\r\n  }\r\n\r\n  public bySymbol(symbol: string): Token[] | undefined {\r\n    return this.find('symbol', symbol)\r\n  }\r\n\r\n  public byAddress(address: string): Token[] | undefined {\r\n    return this.find('address', address)\r\n  }\r\n\r\n  public firstByName(name: string): Token | undefined {\r\n    return this.find('name', name)?.[0]\r\n  }\r\n\r\n  public firstBySymbol(symbol: string): Token | undefined {\r\n    return this.find('symbol', symbol)?.[0]\r\n  }\r\n\r\n  public firstByAddress(address: string): Token | undefined {\r\n    return this.find('address', address)?.[0]\r\n  }\r\n\r\n  public find(key: string, value: string): Token[] | undefined {\r\n    if (this.tokens === undefined) return undefined\r\n  \r\n    switch (key) {\r\n      case 'name':\r\n        return this.tokens.filter((token) => token?.name?.toLowerCase() == value.toLowerCase())\r\n      case 'symbol':\r\n        return this.tokens.filter((token) => token?.symbol?.toLowerCase() == value.toLowerCase())\r\n      case 'address':\r\n        return this.tokens.filter((token) => token?.address?.toLowerCase() == value.toLowerCase())\r\n      default:\r\n        return this.tokens.filter((token) => token?.name?.toLowerCase() == value.toLowerCase())\r\n    }\r\n  }\r\n\r\n  public first(key: string, value: string): Token | undefined {\r\n    return this.find(key, value)?.[0]\r\n  }\r\n  \r\n  public convertTokens(tokens: TokenListToken[]): Token[] {\r\n    const sdkTokens: Token[] = []\r\n  \r\n    for (const token of tokens) {\r\n      const sdkToken = this.convertToken(token)\r\n      sdkTokens.push(sdkToken)\r\n    }\r\n  \r\n    return sdkTokens\r\n  }\r\n  \r\n  public convertToken(token: TokenListToken): Token {\r\n    return new Token(token.chainId, token.address, token.decimals, token.symbol, token.name)\r\n  }\r\n}\r\n\r\nexport const TOKENS: { [chainId in ChainId]: Tokens } = {\r\n  [ChainId.MAINNET]: new Tokens(ChainId.MAINNET),\r\n  [ChainId.ROPSTEN]: new Tokens(ChainId.ROPSTEN),\r\n  [ChainId.RINKEBY]: new Tokens(ChainId.RINKEBY),\r\n  [ChainId.GÖRLI]: new Tokens(ChainId.GÖRLI),\r\n  [ChainId.KOVAN]: new Tokens(ChainId.KOVAN),\r\n  [ChainId.BSC_MAINNET]: new Tokens(ChainId.BSC_MAINNET),\r\n  [ChainId.BSC_TESTNET]: new Tokens(ChainId.BSC_TESTNET),\r\n  [ChainId.ARBITRUM_NOVA]: new Tokens(ChainId.ARBITRUM_NOVA),\r\n  [ChainId.HARMONY_TESTNET]: new Tokens(ChainId.HARMONY_TESTNET),\r\n}\r\n"],"names":["Blockchain","BlockchainSettings","chainId","blockchain","name","rpcURLs","rpcAPIKey","explorerURL","blockTime","this","setBlockchain","setName","setRpcURLs","setExplorerURL","setCurrency","setBlocktime","_proto","BINANCE_SMART_CHAIN","NOVA","ETHEREUM","length","currency","BINANCE_COIN","ETHER","randomRpcURL","undefined","randomIndex","random","hexChainId","_this$chainId","toString","BLOCKCHAIN_SETTINGS","ChainId","MAINNET","ROPSTEN","RINKEBY","GÖRLI","KOVAN","BSC_MAINNET","BSC_TESTNET","ARBITRUM_NOVA","HARMONY_TESTNET","Tokens","tokens","DEFAULT_TOKEN_LIST","COMMUNITY_TOKEN_LIST","rawTokens","setTokens","convertTokens","byChainId","all","filter","token","_this","byName","find","bySymbol","symbol","byAddress","address","firstByName","_this$find","firstBySymbol","_this$find2","firstByAddress","_this$find3","key","value","toLowerCase","first","_this$find4","sdkTokens","sdkToken","convertToken","push","Token","decimals","TOKENS"],"mappings":"gJAMYA,2JAAAA,EAAAA,qBAAAA,iDAEVA,iDACAA,yBAMWC,aAUX,WAAYC,EAAkBC,EAAyBC,EAAeC,EAAoBC,EAAoBC,EAAsBC,GAClIC,KAAKP,QAAUA,EACfO,KAAKH,UAAYA,EAEjBG,KAAKC,cAAcP,GACnBM,KAAKE,QAAQP,GACbK,KAAKG,WAAWP,GAChBI,KAAKI,eAAeN,GACpBE,KAAKK,cACLL,KAAKM,aAAaP,GAnBtB,kBAAA,OAAAQ,EAsBEN,cAAA,SAAcP,GACZ,GAAIA,EACFM,KAAKN,WAAaA,OAElB,OAAQM,KAAKP,SACX,KAAK,GACL,KAAK,GACHO,KAAKN,WAAaH,mBAAWiB,oBAC/B,MACA,KAAK,MACL,KAAK,QACHR,KAAKN,WAAaH,mBAAWkB,KAC/B,MACA,QACET,KAAKN,WAAaH,mBAAWmB,WApCvCH,EAyCEL,QAAA,SAAQP,GACN,GAAIA,EACFK,KAAKL,KAAOA,OAEZ,OAAQK,KAAKP,SACX,KAAK,EACHO,KAAKL,KAAO,mBACZ,MACF,KAAK,EACHK,KAAKL,KAAO,mBACZ,MACF,KAAK,EACHK,KAAKL,KAAO,mBACZ,MACF,KAAK,EACHK,KAAKL,KAAO,iBACZ,MACF,KAAK,GACHK,KAAKL,KAAO,iBACZ,MACF,KAAK,GACHK,KAAKL,KAAO,8BACZ,MACF,KAAK,GACHK,KAAKL,KAAO,8BACZ,MACF,KAAK,MACHK,KAAKL,KAAO,gBACZ,MACF,KAAK,QACHK,KAAKL,KAAO,kBACZ,MACF,QACEK,KAAKL,KAAO,qBA1EtBY,EA+EEJ,WAAA,SAAWP,GACT,GAAIA,GAAWA,EAAQe,OAAS,EAC9BX,KAAKJ,QAAUA,OAEf,OAAQI,KAAKP,SACX,KAAK,EACHO,KAAKJ,QAAUI,KAAKH,WAAgC,KAAnBG,KAAKH,UAAoB,iCAAiCG,KAAKH,WAAe,CAAC,iCAChH,MACF,KAAK,EACHG,KAAKJ,QAAUI,KAAKH,WAAgC,KAAnBG,KAAKH,UAAoB,iCAAiCG,KAAKH,WAAe,CAAC,iCAChH,MACF,KAAK,EACHG,KAAKJ,QAAUI,KAAKH,WAAgC,KAAnBG,KAAKH,UAAoB,iCAAiCG,KAAKH,WAAe,CAAC,iCAChH,MACF,KAAK,EACHG,KAAKJ,QAAUI,KAAKH,WAAgC,KAAnBG,KAAKH,UAAoB,gCAAgCG,KAAKH,WAAe,CAAC,gCAC/G,MACF,KAAK,GACHG,KAAKJ,QAAUI,KAAKH,WAAgC,KAAnBG,KAAKH,UAAoB,+BAA+BG,KAAKH,WAAe,CAAC,+BAC9G,MACF,KAAK,GACHG,KAAKJ,QAAU,CACb,oCACA,oCACA,sCAEF,MACF,KAAK,GACHI,KAAKJ,QAAU,CACb,kDACA,kDACA,mDAEF,MACF,KAAK,MACHI,KAAKJ,QAAU,CAAC,gCAChB,MACF,KAAK,QACHI,KAAKJ,QAAU,CAAC,6BAChB,MACF,QACEI,KAAKJ,QAAUI,KAAKH,WAAgC,KAAnBG,KAAKH,UAAmB,iCAAiCG,KAAKH,WAAe,CAAC,mCAxHzHU,EA6HEH,eAAA,SAAeN,GACb,GAAIA,GAA+B,KAAhBA,EACjBE,KAAKF,YAAcA,OAEnB,OAAQE,KAAKP,SACX,KAAK,EACHO,KAAKF,YAAc,wBACnB,MACF,KAAK,EACHE,KAAKF,YAAc,gCACnB,MACF,KAAK,EACHE,KAAKF,YAAc,gCACnB,MACF,KAAK,EACHE,KAAKF,YAAc,+BACnB,MACF,KAAK,GACHE,KAAKF,YAAc,8BACnB,MACF,KAAK,GACHE,KAAKF,YAAc,uBACnB,MACF,KAAK,GACHE,KAAKF,YAAc,+BACnB,MACF,KAAK,MACHE,KAAKF,YAAc,oCACnB,MACF,KAAK,QACHE,KAAKF,YAAc,wCACnB,MACF,QACEE,KAAKF,YAAc,0BA9J7BS,EAmKEF,YAAA,WACE,OAAQL,KAAKP,SACX,KAAK,GACL,KAAK,GACHO,KAAKY,SAAWC,eAChB,MACF,KAAK,MACL,KAAK,QACHb,KAAKY,SAAWH,OAChB,MACF,QACET,KAAKY,SAAWE,UA9KxBP,EAkLED,aAAA,SAAaP,GACX,GAAIA,EACFC,KAAKD,UAAYA,OAEjB,OAAQC,KAAKP,SACX,KAAK,GACL,KAAK,GACHO,KAAKD,UAAY,EACjB,MACF,KAAK,MACL,KAAK,QACHC,KAAKD,UAAY,EACjB,MACF,QACEC,KAAKD,UAAY,KAhM3BQ,EAqMEQ,aAAA,WACE,QAAqBC,IAAjBhB,KAAKJ,SAAiD,IAAxBI,KAAKJ,QAAQe,OAA/C,CACA,IAAMM,EAAcC,EAAO,EAAGlB,KAAKJ,QAAQe,OAAS,GACpD,OAAOX,KAAKJ,QAAQqB,KAxMxBV,EA2MEY,WAAA,iBACE,qBAAYnB,KAAKP,gBAAL2B,EAAcC,SAAS,WAI1BC,UACVC,UAAQC,SAAU,IAAIhC,EAAmB+B,UAAQC,WACjDD,UAAQE,SAAU,IAAIjC,EAAmB+B,UAAQE,WACjDF,UAAQG,SAAU,IAAIlC,EAAmB+B,UAAQG,WACjDH,UAAQI,OAAQ,IAAInC,EAAmB+B,UAAQI,SAC/CJ,UAAQK,OAAQ,IAAIpC,EAAmB+B,UAAQK,SAC/CL,UAAQM,aAAc,IAAIrC,EAAmB+B,UAAQM,eACrDN,UAAQO,aAAc,IAAItC,EAAmB+B,UAAQO,eACrDP,UAAQQ,eAAgB,IAAIvC,EAAmB+B,UAAQQ,iBACvDR,UAAQS,iBAAkB,IAAIxC,EAAmB+B,UAAQS,kIC3N/CC,aAKX,WAAYxC,EAAmByC,YAAAA,IAAAA,YAAaC,EAAmBD,OAAWE,EAAqBF,SAC7FlC,KAAKP,QAAUA,EACfO,KAAKqC,UAAYH,EACjBlC,KAAKsC,YART,kBAAA,OAAA/B,EAWU+B,UAAA,WACNtC,KAAKkC,OAASlC,KAAKuC,cAAcvC,KAAKqC,WAElCrC,KAAKP,UACPO,KAAKkC,OAASlC,KAAKwC,cAfzBjC,EAmBSkC,IAAA,WACL,GAAKzC,KAAKkC,QAAgC,GAAtBlC,KAAKkC,OAAOvB,OAChC,OAAOX,KAAKkC,QArBhB3B,EAwBSiC,UAAA,sBACL,QAAqBxB,IAAjBhB,KAAKP,cAAyCuB,IAAhBhB,KAAKkC,OACvC,OAAOlC,KAAKkC,OAAOQ,QAAO,SAACC,GAAD,OAAkBA,EAAMlD,SAAWmD,EAAKnD,YA1BtEc,EA6BSsC,OAAA,SAAOlD,GACZ,OAAOK,KAAK8C,KAAK,OAAQnD,IA9B7BY,EAiCSwC,SAAA,SAASC,GACd,OAAOhD,KAAK8C,KAAK,SAAUE,IAlC/BzC,EAqCS0C,UAAA,SAAUC,GACf,OAAOlD,KAAK8C,KAAK,UAAWI,IAtChC3C,EAyCS4C,YAAA,SAAYxD,SACjB,gBAAOK,KAAK8C,KAAK,OAAQnD,WAAlByD,EAA0B,IA1CrC7C,EA6CS8C,cAAA,SAAcL,SACnB,gBAAOhD,KAAK8C,KAAK,SAAUE,WAApBM,EAA8B,IA9CzC/C,EAiDSgD,eAAA,SAAeL,SACpB,gBAAOlD,KAAK8C,KAAK,UAAWI,WAArBM,EAAgC,IAlD3CjD,EAqDSuC,KAAA,SAAKW,EAAaC,GACvB,QAAoB1C,IAAhBhB,KAAKkC,OAET,OAAQuB,GACN,IAAK,OACH,OAAOzD,KAAKkC,OAAOQ,QAAO,SAACC,GAAD,MAAA,aAAWA,YAAAA,EAAOhD,eAAMgE,gBAAiBD,EAAMC,iBAC3E,IAAK,SACH,OAAO3D,KAAKkC,OAAOQ,QAAO,SAACC,GAAD,MAAA,aAAWA,YAAAA,EAAOK,iBAAQW,gBAAiBD,EAAMC,iBAC7E,IAAK,UACH,OAAO3D,KAAKkC,OAAOQ,QAAO,SAACC,GAAD,MAAA,aAAWA,YAAAA,EAAOO,kBAASS,gBAAiBD,EAAMC,iBAC9E,QACE,OAAO3D,KAAKkC,OAAOQ,QAAO,SAACC,GAAD,MAAA,aAAWA,YAAAA,EAAOhD,eAAMgE,gBAAiBD,EAAMC,mBAhEjFpD,EAoESqD,MAAA,SAAMH,EAAaC,SACxB,gBAAO1D,KAAK8C,KAAKW,EAAKC,WAAfG,EAAwB,IArEnCtD,EAwESgC,cAAA,SAAcL,GAGnB,IAFA,MAAM4B,EAAqB,yrBAEP5B,kBAAQ,CAAA,IACpB6B,EAAW/D,KAAKgE,sBACtBF,EAAUG,KAAKF,GAGjB,OAAOD,GAhFXvD,EAmFSyD,aAAA,SAAarB,GAClB,OAAO,IAAIuB,QAAMvB,EAAMlD,QAASkD,EAAMO,QAASP,EAAMwB,SAAUxB,EAAMK,OAAQL,EAAMhD,YAI1EyE,UACV7C,UAAQC,SAAU,IAAIS,EAAOV,UAAQC,WACrCD,UAAQE,SAAU,IAAIQ,EAAOV,UAAQE,WACrCF,UAAQG,SAAU,IAAIO,EAAOV,UAAQG,WACrCH,UAAQI,OAAQ,IAAIM,EAAOV,UAAQI,SACnCJ,UAAQK,OAAQ,IAAIK,EAAOV,UAAQK,SACnCL,UAAQM,aAAc,IAAII,EAAOV,UAAQM,eACzCN,UAAQO,aAAc,IAAIG,EAAOV,UAAQO,eACzCP,UAAQQ,eAAgB,IAAIE,EAAOV,UAAQQ,iBAC3CR,UAAQS,iBAAkB,IAAIC,EAAOV,UAAQS"}